// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  clerkId String @unique
  email   String @unique

  goals   UserGoal[]
  entries JournalEntry[]
}

model Group {
  id          String     @id @default(uuid())
  name        String
  members     GroupMember[]
  goals       GroupGoal[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model GroupMember {
  id          String     @id @default(uuid())
  groupId     String
  userId      String
  role        String     // e.g., "Admin" or "Member"
  group       Group      @relation(fields: [groupId], references: [id])

  @@unique([groupId, id])
}

model GroupGoal {
  id          String     @id @default(uuid())
  title       String
  description String
  tasks       String[]
  groupId     String
  group       Group      @relation(fields: [groupId], references: [id])

  @@unique([groupId, id])
}

model UserGoal {
  id          String     @id @default(uuid())
  userId      String
  title       String
  description String
  tasks       String[] 

  user     User      @relation(fields: [userId], references: [id])
  
  @@unique([userId, id])
}

model JournalEntry {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  content String @db.Text
  userId  String

  user     User      @relation(fields: [userId], references: [id])
  analysis Analysis?

  @@unique([userId, id])
}

model Analysis {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  mood     String
  summary  String  @db.Text
  color    String
  negative Boolean
  subject  String

  entryId String
  entry   JournalEntry @relation(fields: [entryId], references: [id], onDelete: Cascade)

  @@unique([entryId])
}
